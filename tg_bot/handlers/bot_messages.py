from logging import getLogger
from aiogram import F, Router
from aiogram.types import Message

from tg_bot.contrib.func_logger import UserForLogs

logger = getLogger(__name__)
router = Router()

@router.message(F.text.casefold().in_(['üîç–ø–æ–∏—Å–∫', '–ø–æ–∏—Å–∫']))
async def search_rkb_ans(message: Message):
    await message.answer('–î–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ "!–ø–æ–∏—Å–∫ [–∏–º—è –±–æ—Ç–∞]"\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø—Ä–æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ—Å—Ç–æ "!–ø–æ–∏—Å–∫"')
    logger.info(f'{search_rkb_ans.__name__} is handled {UserForLogs.log_name(message)}')

@router.message(F.text.casefold().in_(['‚öô–Ω–∞—Å—Ç—Ä–æ–π–∫–∏', '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏']))
async def setts_rkb_ans(message: Message):
    await message.answer('–Ø–∑—ã–∫: RUüá∑üá∫')
    logger.info(f'{search_rkb_ans.__name__} is handled {UserForLogs.log_name(message)}')